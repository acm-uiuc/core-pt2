{"version":3,"sources":["../../src/middlewares/isAuth.js"],"names":["getTokenFromHeader","req","headers","authorization","split","res","next","token","signature","process","env","JWT_SECRET","jwt","verify","err","decoded","tokenData","data","status","send"],"mappings":";;;;;;;AAAA;;;;;;;;AAEA,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,GAAD,EAAS;AAClC,MACEA,GAAG,CAACC,OAAJ,CAAYC,aAAZ,IACAF,GAAG,CAACC,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,MAA4C,QAF9C,EAGE;AACA,WAAOH,GAAG,CAACC,OAAJ,CAAYC,aAAZ,CAA0BC,KAA1B,CAAgC,GAAhC,EAAqC,CAArC,CAAP;AACD;AACF,CAPD;;;qEASe,iBAAOH,GAAP,EAAYI,GAAZ,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,KADO,GACCP,kBAAkB,CAACC,GAAD,CADnB;AAEPO,YAAAA,SAFO,GAEKC,OAAO,CAACC,GAAR,CAAYC,UAFjB;;AAIbC,qCAAIC,MAAJ,CAAWN,KAAX,EAAkBC,SAAlB,EAA6B,UAAUM,GAAV,EAAeC,OAAf,EAAwB;AACnDC,cAAAA,SAAS,GAAGD,OAAO,CAACE,IAApB;;AACA,kBAAIH,GAAJ,EAAS;AACP,uBAAOT,GAAG,CAACa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,eAArB,CAAP;AACD,eAFD,MAEO;AACLlB,gBAAAA,GAAG,CAACe,SAAJ,GAAgBA,SAAhB;AACA,uBAAOV,IAAI,EAAX;AACD;AACF,aARD;;AAJa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import jwt from 'jsonwebtoken';\n\nconst getTokenFromHeader = (req) => {\n  if (\n    req.headers.authorization &&\n    req.headers.authorization.split(' ')[0] === 'Bearer'\n  ) {\n    return req.headers.authorization.split(' ')[1];\n  }\n};\n\nexport default async (req, res, next) => {\n  const token = getTokenFromHeader(req);\n  const signature = process.env.JWT_SECRET;\n  let tokenData;\n  jwt.verify(token, signature, function (err, decoded) {\n    tokenData = decoded.data;\n    if (err) {\n      return res.status(401).send('Invalid Token');\n    } else {\n      req.tokenData = tokenData;\n      return next();\n    }\n  });\n};\n"],"file":"isAuth.js"}