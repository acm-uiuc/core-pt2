{"version":3,"sources":["../../src/models/index.js"],"names":["sequelize","Sequelize","process","env","DATABASE","DATABASE_USER","DATABASE_PASSWORD","host","DATABASE_HOST","dialect","models","User","DataTypes","Role","User_Role_Xref","define","timestamps","belongsToMany","through","hasMany","belongsTo","Object","keys","forEach","key","associate"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AAEA,IAAMA,SAAS,GAAG,IAAIC,qBAAJ,CAChBC,OAAO,CAACC,GAAR,CAAYC,QADI,EAEhBF,OAAO,CAACC,GAAR,CAAYE,aAFI,EAGhBH,OAAO,CAACC,GAAR,CAAYG,iBAHI,EAIhB;AACEC,EAAAA,IAAI,EAAEL,OAAO,CAACC,GAAR,CAAYK,aADpB;AAEEC,EAAAA,OAAO,EAAE;AAFX,CAJgB,CAAlB;;AAUA,IAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE,sBAAKX,SAAL,EAAgBC,sBAAUW,SAA1B,CADO;AAEbC,EAAAA,IAAI,EAAE,sBAAKb,SAAL,EAAgBC,sBAAUW,SAA1B,CAFO;AAGbE,EAAAA,cAAc,EAAEd,SAAS,CAACe,MAAV,CAAiB,gBAAjB,EAAmC,EAAnC,EAAuC;AAAEC,IAAAA,UAAU,EAAE;AAAd,GAAvC;AAHH,CAAf;AAMAN,MAAM,CAACC,IAAP,CAAYM,aAAZ,CAA0BP,MAAM,CAACG,IAAjC,EAAuC;AAAEK,EAAAA,OAAO,EAAER,MAAM,CAACI;AAAlB,CAAvC;AACAJ,MAAM,CAACG,IAAP,CAAYI,aAAZ,CAA0BP,MAAM,CAACC,IAAjC,EAAuC;AAAEO,EAAAA,OAAO,EAAER,MAAM,CAACI;AAAlB,CAAvC;AACAJ,MAAM,CAACC,IAAP,CAAYQ,OAAZ,CAAoBT,MAAM,CAACI,cAA3B;AACAJ,MAAM,CAACI,cAAP,CAAsBM,SAAtB,CAAgCV,MAAM,CAACC,IAAvC;AACAD,MAAM,CAACG,IAAP,CAAYM,OAAZ,CAAoBT,MAAM,CAACI,cAA3B;AACAJ,MAAM,CAACI,cAAP,CAAsBM,SAAtB,CAAgCV,MAAM,CAACG,IAAvC;AAEAQ,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,OAApB,CAA4B,UAACC,GAAD,EAAS;AACnC,MAAI,eAAed,MAAM,CAACc,GAAD,CAAzB,EAAgC;AAC9Bd,IAAAA,MAAM,CAACc,GAAD,CAAN,CAAYC,SAAZ,CAAsBf,MAAtB;AACD;AACF,CAJD;eAQeA,M","sourcesContent":["import Sequelize from 'sequelize';\nimport role from './role';\nimport user from './user';\n\nconst sequelize = new Sequelize(\n  process.env.DATABASE,\n  process.env.DATABASE_USER,\n  process.env.DATABASE_PASSWORD,\n  {\n    host: process.env.DATABASE_HOST,\n    dialect: 'postgres',\n  }\n);\n\nconst models = {\n  User: user(sequelize, Sequelize.DataTypes),\n  Role: role(sequelize, Sequelize.DataTypes),\n  User_Role_Xref: sequelize.define('User_Role_Xref', {}, { timestamps: false }),\n};\n\nmodels.User.belongsToMany(models.Role, { through: models.User_Role_Xref });\nmodels.Role.belongsToMany(models.User, { through: models.User_Role_Xref });\nmodels.User.hasMany(models.User_Role_Xref);\nmodels.User_Role_Xref.belongsTo(models.User);\nmodels.Role.hasMany(models.User_Role_Xref);\nmodels.User_Role_Xref.belongsTo(models.Role);\n\nObject.keys(models).forEach((key) => {\n  if ('associate' in models[key]) {\n    models[key].associate(models);\n  }\n});\n\nexport { sequelize };\n\nexport default models;\n"],"file":"index.js"}